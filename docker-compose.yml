services:
  app:
    container_name: cf_manager-app
    build: .
    expose:
      - 8000
    command: >
      sh -c ". .venv/bin/activate &&
             cd cf_manager &&
             python manage.py collectstatic --noinput &&
             python manage.py migrate --database=default &&
             gunicorn cf_manager.wsgi:application --bind 0.0.0.0:8000"
    env_file: ".env"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - postgres_network
      - redis_network
      - nginx_network
    volumes:
      - static:/ClashFlowManager/cf_manager/static

  postgres:
    container_name: cf_manager-postgres
    image: postgres:latest
    env_file:
      - .env
    ports:
      - '${POSTGRES_PORT}:5432'
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    volumes:
      - ./data/postgres-data:/var/lib/postgresql/data
    networks:
      - postgres_network

  nginx:
    container_name: cf_manager-nginx
    build:
      context: ./nginx
    ports:
      - "8000:80"
    depends_on:
      app:
        condition: service_started
    restart: always
    networks:
      - nginx_network
    volumes:
      - static:/static

  redis:
    container_name: cf_manager-redis
    image: redis:latest
    ports:
      - "6379:6379"
    command: [ "redis-server", "/usr/local/etc/redis/redis.conf" ]
    restart: unless-stopped
    volumes:
      - ./data/redisdata_dev:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf
    ulimits:
      nofile:
        soft: 200000
        hard: 200000
    deploy:
      resources:
        limits:
          memory: 2g
          cpus: "1.0"
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
      interval: 10s
      timeout: 10s
      retries: 5
    networks:
      - redis_network

networks:
  postgres_network:
    driver: bridge
  nginx_network:
    driver: bridge
  redis_network:
    driver: bridge

volumes:
  static:
